// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NerdStore.Catalogo.Data.Contexts;

#nullable disable

namespace NerdStore.Catalogo.Data.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20221227012633_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NerdStore.Catalogo.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("NerdStore.Catalogo.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("QuantityStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("NerdStore.Catalogo.Domain.ValueObjects.Dimensions", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Depth")
                        .HasColumnType("int")
                        .HasColumnName("Profundidade");

                    b.Property<int>("Height")
                        .HasColumnType("int")
                        .HasColumnName("Altura");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasColumnName("Largura");

                    b.HasKey("Id");

                    b.ToTable("Dimensions", (string)null);
                });

            modelBuilder.Entity("NerdStore.Catalogo.Domain.Entities.Product", b =>
                {
                    b.HasOne("NerdStore.Catalogo.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NerdStore.Catalogo.Domain.ValueObjects.Dimensions", b =>
                {
                    b.HasOne("NerdStore.Catalogo.Domain.Entities.Product", "Product")
                        .WithOne("Dimensions")
                        .HasForeignKey("NerdStore.Catalogo.Domain.ValueObjects.Dimensions", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NerdStore.Catalogo.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NerdStore.Catalogo.Domain.Entities.Product", b =>
                {
                    b.Navigation("Dimensions")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
